#
# CSE183 Assignment 9 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 9 Backend
  version: 0.1.0
  title: CSE183 Assignment 9 Backend

servers:
  - url: http://localhost:3010

paths:
  /v0/mail:
    get:
      description: Returns all EMail
      parameters:
      - name: useremail
        in: query
        required: true
        description: User's email
        schema:
          type: string
          format: email
      - name: mailbox
        in: query
        required: false
        description: Mailbox name
        schema:
          type: string
      responses:
        200:
          description: Email Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mailbox'
        404:
          description: Unknown mailbox
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new email
      requestBody:
        description: Save a new email that was sent
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEmail'
      responses:
        201:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        400:
          description: Unexpected properties in submitted email
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/mail/{id}:
    get:
      description: Returns an email identified by the id
      parameters:
      - name: id
        in: path
        description: id of the identified email
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Email found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        404:
          description: Id does not identify a known email
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates an email identified by the id
      parameters:
      - in: query
        name: mailbox
        description: Mailbox name
        required: false
        schema:
          type: string
      - in: path
        name: id
        description: id of the identified email
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Update an email that was sent
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
      responses:
        204:
          description: Email found and updated
        404:
          description: Id does not identify a known email
        409:
          description: If mailbox is the sent one and mail identified by id is not in sent mailbox
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v0/emailuser:
    get:
      description: Returns all users
      parameters:
      - name: user
        in: query
        required: false
        description: User's email
        schema:
          type: string
          format: email
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Unknown user
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Mailbox:
      description: An array of mailboxes
      type: array
      items:
        type: object
        properties:
          useremail:
            type: string
            format: email
          name:
            type: string
          mail:
            type: array
            items:
              $ref: '#/components/schemas/Email'

    Email:
      description: A mailbox full of emails
      type: object
      properties:
        id:
          type: string
          format: uuid
        to-name:
          type: string
        to-email:
          type: string
          format: email
        from-name:
          type: string
        from-email:
          type: string
          format: email
        subject:
          type: string
        received:
          type: string
          format: date-time
        sent:
          type: string
          format: date-time
        content:
          type: string
        star:
          type: boolean
        read:
          type: boolean
      required:
        - id
        - to-name
        - to-email
        - from-name
        - from-email
        - subject
        - received
        - sent
        - content

    NewEmail:
      description: A new email
      type: object
      properties:
        to-name:
          type: string
        to-email:
          type: string
          format: email
        subject:
          type: string
        content:
          type: string
      required:
        - to-name
        - to-email
        - subject
        - content

    User:
      description: A user and its data
      type: array
      items:
        type: object
        properties:
          useremail:
            type: string
            format: email
          username:
            type: string
          userpassword:
            type: string
          avatarurl:
            type: string
          showavatar:
            type: boolean
        required:
          - useremail
          - username