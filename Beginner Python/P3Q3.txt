#Sri has a group of vintage string lights with some of the lights being defective. A defective light is shown by 0 and a normal 
#(non-defective) light is shown by 1 in the input. For example, the input “0110” represents a string with 4 lights in which the first 
#and the last light are defective. Sri is interested in finding the longest number of non-defective lights in a row. 
#In the example above, the longest number of non-defective lights is 2, represented by “11".

#The first line of your input will contain the number of vintage lights followed by a string representation of every light. 
#The output should be a single integer denoting the longest chain of non-defective lights. 
#The chain can continue to the next group of lights, such as in the second example below where the longest number of non-defective 
#lights is 5 with 4 non-defective lights from one string and 1 non-defective light from the second string.

#Examples:
#Input:
#1
#0110

#Output:
#2

#Input:
#3
#1111
#1010110
#11001

#Output:
#5


num = int(input())
list_lights = []

for i in range(0,num):
    list_lights.append(input())
        
str_lights = ''
str_lights = str_lights.join(list_lights)

str_ones = str_lights.split('0')

len_list = []
for x in str_ones:
    len_list.append(len(x))
    
print(max(len_list), end='')
    
            